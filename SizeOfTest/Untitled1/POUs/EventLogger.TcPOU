<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="EventLogger" Id="{22ebf1fc-d024-4025-9ba1-6c660f896062}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK EventLogger

VAR
	EventBuffer : ARRAY [1..MAXIMUM_SIZE_OF_EVENT_BUFFER] OF ST_Event; 
	CurrentEventBufferIndex : INT := 0;
	_PersistentEventStorage : I_PersistentEventStorage;
END_VAR
VAR CONSTANT
	MAXIMUM_SIZE_OF_EVENT_BUFFER : INT := 100; 
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="AddEvent" Id="{74f93359-8ccd-46bb-bd68-6357138ac660}">
      <Declaration><![CDATA[(*Returns TRUE if add was succesful and FALSE if buffer is full *)

METHOD PUBLIC AddEvent : BOOL
VAR_INPUT
	eEventType : E_EventType;
	eEventSeverity : TcEventSeverity;
	nEventIdentity : UDINT;
	sEventText : STRING (255);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT IsEventBufferFull() THEN
	CurrentEventBufferIndex := CurrentEventBufferIndex + 1;
	EventBuffer[CurrentEventBufferIndex].eEventType := eEventType;
	EventBuffer[CurrentEventBufferIndex].eEventSeverity := eEventSeverity;
	EventBuffer[CurrentEventBufferIndex].nEventIdentity := nEventIdentity;
	EventBuffer[CurrentEventBufferIndex].sEventText := sEventText;
	UpdateEventTimeStampWithSystemTime(stEvent := EventBuffer[CurrentEventBufferIndex]);
	AddEvent := TRUE;
ELSE
	AddEvent := FALSE;
END_IF

//Here we want ti stor the event persistentlty
_PersistentEventStorage.StoreEvent(stEvent := EventBuffer[CurrentEventBufferIndex]);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{4c88e6c9-42e9-480a-aed8-f48d37e1e9a7}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	iPersistentEventStorage : I_PersistentEventStorage;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_PersistentEventStorage := iPersistentEventStorage;]]></ST>
      </Implementation>
    </Method>
    <Method Name="IsEventBufferFull" Id="{4887ee12-4171-4be3-a4de-4572377e797a}">
      <Declaration><![CDATA[METHOD PRIVATE IsEventBufferFull : BOOL

]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (CurrentEventBufferIndex +1) > MAXIMUM_SIZE_OF_EVENT_BUFFER THEN
	IsEventBufferFull := TRUE;
ELSE
	IsEventBufferFull := FALSE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="EventLogger">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="EventLogger.AddEvent">
      <LineId Id="13" Count="1" />
      <LineId Id="19" Count="4" />
      <LineId Id="18" Count="0" />
      <LineId Id="16" Count="1" />
      <LineId Id="15" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="26" Count="0" />
    </LineIds>
    <LineIds Name="EventLogger.FB_init">
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="EventLogger.IsEventBufferFull">
      <LineId Id="6" Count="3" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>